# JVM configuration heap size https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html
# Xms represents the initial size of total heap space
# Xmx represents the maximum size of total heap space

-Xms{{ jvm["heap_size"] or "1g" }}
-Xmx{{ jvm["heap_size"] or "1g" }}

# Expert settings
# https://www.elastic.co/guide/en/elasticsearch/reference/current/jvm-options.html

# GC configuration
8-13:-XX:+UseConcMarkSweepGC
8-13:-XX:CMSInitiatingOccupancyFraction=75
8-13:-XX:+UseCMSInitiatingOccupancyOnly

# G1GC Configuration
# to use G1GC, uncomment the next two lines and update the version on the
# following three lines to your version of the JDK
# 8-13:-XX:-UseConcMarkSweepGC
# 8-13:-XX:-UseCMSInitiatingOccupancyOnly
14-:-XX:+UseG1GC
14-:-XX:G1ReservePercent=25
14-:-XX:InitiatingHeapOccupancyPercent=30

# JVM temporary directory
-Djava.io.tmpdir=${ES_TMPDIR}

# heap dumps

# generate a heap dump when an allocation from the Java heap fails
# heap dumps are created in the working directory of the JVM
-XX:+HeapDumpOnOutOfMemoryError

# specify an alternative path for heap dumps; ensure the directory exists and
# has sufficient space
${heap.dump.path}

# specify an alternative path for JVM fatal error logs
${error.file}

# GC logging
-Xlog:gc*,gc+age=trace,safepoint:file=${loggc}:utctime,pid,tags:filecount=32,filesize=64m
